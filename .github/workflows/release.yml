name: release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
          tags: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies and build tool
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel build
      
      - name: Fetch all tags
        run: git fetch --tags  --prune-tags

      - name: Determine version
        id: tag
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "TAG=latest" >> $GITHUB_OUTPUT
          fi

      - name: Build Python package (sdist and wheel)
        run: |
          python -m build --sdist --wheel

      - name: List dist contents
        run: ls -al dist

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload source archive
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/lib-ml-${{ steps.tag.outputs.TAG }}.tar.gz
          asset_name: lib-ml-${{ steps.tag.outputs.TAG }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload wheel package
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/lib-ml-${{ steps.tag.outputs.TAG }}-py3-none-any.whl
          asset_name: lib-ml-${{ steps.tag.outputs.TAG }}-py3-none-any.whl
          asset_content_type: application/octet-stream
